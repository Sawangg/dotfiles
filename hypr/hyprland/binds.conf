$mainMod = SUPER

bind = $mainMod, T, exec, $terminal
bind = $mainMod, C, killactive,
bind = $mainMod, R, exec, $menu
bind = $mainMod, B, exec, $browser
bind = $mainMod SHIFT, B, exec, $browser -private-window
bind = $mainMod, O, exec, $notes
bind = $mainMod, F, fullscreen, 0
bind = $mainMod, P, exec, $colorPicker
bind = $mainMod SHIFT, P, pin,
bind = $mainMod SHIFT, F, togglefloating,
bind = $mainMod, Q, exit,

# Move across workspaces
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move to a workspace
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Move focus with vim keys or arrow keys
bind = $mainMod, left,  movefocus, l
bind = $mainMod, H,     movefocus, l
bind = $mainMod, down,  movefocus, d
bind = $mainMod, J,     movefocus, d
bind = $mainMod, up,    movefocus, u
bind = $mainMod, K,     movefocus, u
bind = $mainMod, right, movefocus, r
bind = $mainMod, L,     movefocus, r

# Resize active window with shift + vim keys or arrow keys
binde = $mainMod SHIFT, left,  resizeactive, -20 0
binde = $mainMod SHIFT, H,     resizeactive, -20 0
binde = $mainMod SHIFT, down,  resizeactive, 0 20
binde = $mainMod SHIFT, J,     resizeactive, 0 20
binde = $mainMod SHIFT, up,    resizeactive, 0 -20
binde = $mainMod SHIFT, K,     resizeactive, 0 -20
binde = $mainMod SHIFT, right, resizeactive, 20 0
binde = $mainMod SHIFT, L,     resizeactive, 20 0

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Audio
binde =, XF86AudioRaiseVolume, exec, wpctl set-volume -l 1.5 @DEFAULT_AUDIO_SINK@ 5%+ && notify-send -a "Volume" -t 3500 -h string:x-sawang:vol "$(wpctl get-volume @DEFAULT_AUDIO_SINK@)"
binde =, XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%- && notify-send -a "Volume" -t 3500 -h string:x-sawang:vol "$(wpctl get-volume @DEFAULT_AUDIO_SINK@)"
bindl =, XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindl =, XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle

# Media control
bindl =, XF86AudioPlay, exec, playerctl play-pause && notify-send -a "Player" "$(playerctl status)"
bindl =, XF86AudioNext, exec, playerctl next
bindl =, XF86AudioPrev, exec, playerctl previous
bindl =, Pause, exec, playerctl play-pause && notify-send -a "Player" "$(playerctl status)"

# Screen brightness
bindl = $mainMod, SPACE,        exec, hyprctl dispatch dpms off
bindl =, XF86ScreenSaver,       exec, hyprctl dispatch dpms off
binde =, XF86MonBrightnessDown, exec, brightnessctl set 5%- && notify-send -a "Brightness" -t 3500 -h string:x-dunst-stack-tag:brightness "Brightness $(brightnessctl -m | cut -d, -f4)"
binde =, XF86MonBrightnessUp,   exec, brightnessctl set +5% && notify-send -a "Brightness" -t 3500 -h string:x-dunst-stack-tag:brightness "Brightness $(brightnessctl -m | cut -d, -f4)"

# Screenshot
bind =, Print, exec, slurp | grim -g - - | wl-copy && notify-send -a Screenshot Screenshot saved in clipboard
bind = SHIFT, Print, exec, slurp | grim -g - ~/screenshot.png

# Zoom
binde = $mainMod, minus, exec, hyprctl getoption cursor:zoom_factor | grep float | awk '{ if($2!=1) system("hyprctl keyword cursor:zoom_factor " $2 - 0.1) }' && hyprctl getoption cursor:zoom_factor | grep float | awk '{print $2}'
binde = $mainMod, equal, exec, hyprctl getoption cursor:zoom_factor | grep float | awk '{ system("hyprctl keyword cursor:zoom_factor " $2 + 0.1) }' && hyprctl getoption cursor:zoom_factor | grep float | awk '{print $2}'

# Lock password manager
bind = $mainMod, backspace, exec, keepassxc --lock && notify-send -h string:x-dunst-stack-tag:keepassxc KeepassXC "Database locked"

# Lock your session
bind = $mainMod SHIFT, backspace, exec, keepassxc --lock && hyprlock

# Suspend the system when the laptop lid is closed
bindl =, switch:on:Lid Switch, exec, suspend

# Prevent idling
bind = $mainMod, I, exec, pgrep -x "hypridle" > /dev/null 2>&1 && { killall hypridle; notify-send "Idling suspended"; } || { hypridle & disown; notify-send "Idling resumed"; }

# Kill switch
bind = $mainMod, Escape, exec, doas /sbin/poweroff
